name: build

on:
  push:
    branches:
      - 'master'

jobs:
  base-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: ["18.04", "20.04"]
    steps:
      - uses: "actions/checkout@v2"
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - if: matrix.dockerfile == '18.04'
        name: build 18.04
        uses: docker/build-push-action@v2
        with:
          context: .
          file: 18.04.dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/defects4cpp-ubuntu:18.04
      - if: matrix.dockerfile == '20.04'
        name: build 20.04
        uses: docker/build-push-action@v2
        with:
          context: .
          file: 20.04.dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/defects4cpp-ubuntu:20.04
  images:
    needs: base-images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: ["libchewing", "proj", "wireshark-ubuntu-dev"]
    steps:
      - uses: "actions/checkout@v2"
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - if: matrix.dockerfile == 'libchewing'
        name: build libchewing
        uses: docker/build-push-action@v2
        with:
          context: .
          file: libchewing.dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/defects4cpp-ubuntu:libchewing
      - if: matrix.dockerfile == 'proj'
        name: build proj
        uses: docker/build-push-action@v2
        with:
          context: .
          file: proj.dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/defects4cpp-ubuntu:proj
      - if: matrix.dockerfile == 'wireshark-ubuntu-dev'
        name: build wireshark
        uses: docker/build-push-action@v2
        with:
          context: .
          file: wireshark-ubuntu-dev.dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/defects4cpp-ubuntu:wireshark