name: build

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:

jobs:
  base-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: ["18.04", "20.04"]
    steps:
      - uses: "actions/checkout@v2"
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: build ${{ matrix.dockerfile }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}.dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/defects4cpp-ubuntu:${{ matrix.dockerfile}}
  images:
    needs: base-images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: ["coreutils", "cppcheck", "cpp_peglib", "dlt_daemon", "example", "exiv2", "freerdp", "gravity", "jerryscript", "libchewing", "libsndfile", "libssh", "libtiff", "libtiff_sanitizer", "libucl", "libxml2", "ndpi", "openexr", "openssl", "proj", "the_silver_searcher", "wget2", "wireshark", "xbps", "yara", "zsh"]
    steps:
      - uses: "actions/checkout@v2"
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: build ${{ matrix.dockerfile }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}.dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/defects4cpp-ubuntu:${{ matrix.dockerfile }}
